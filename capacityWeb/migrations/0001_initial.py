# Generated by Django 2.2.6 on 2020-01-14 01:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adminer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('scenicid', models.IntegerField(blank=True, db_column='scenicId', null=True)),
            ],
            options={
                'db_table': 'adminer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('camid', models.CharField(db_column='camId', max_length=11, primary_key=True, serialize=False)),
                ('camplace', models.CharField(blank=True, db_column='camPlace', max_length=255, null=True)),
                ('camlng', models.FloatField(blank=True, db_column='camLng', null=True)),
                ('camlat', models.FloatField(blank=True, db_column='camLat', null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'camera',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Camerainfo',
            fields=[
                ('cameraid', models.IntegerField(db_column='cameraId', primary_key=True, serialize=False)),
                ('camid', models.IntegerField(blank=True, db_column='camId', null=True)),
                ('sciencid', models.IntegerField(db_column='sciencId')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('adminid', models.IntegerField(blank=True, db_column='adminId', null=True)),
                ('adminname', models.CharField(blank=True, db_column='adminName', max_length=255, null=True)),
                ('devicetype', models.CharField(blank=True, db_column='deviceType', max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'camerainfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deviceinfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('devicename', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('devicetype', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('adminername', models.CharField(blank=True, max_length=255, null=True)),
                ('adminid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'deviceinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mobile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('todaydividual', models.CharField(blank=True, db_column='todayDividual', max_length=255, null=True)),
                ('todayteam', models.CharField(blank=True, db_column='todayTeam', max_length=255, null=True)),
                ('todaytotal', models.CharField(blank=True, db_column='todayTotal', max_length=255, null=True)),
                ('centerdividual', models.CharField(blank=True, db_column='centerDividual', max_length=255, null=True)),
                ('centerteam', models.CharField(blank=True, db_column='centerTeam', max_length=255, null=True)),
                ('centerin', models.CharField(blank=True, db_column='centerIn', max_length=255, null=True)),
                ('eastsouthdividual', models.CharField(blank=True, db_column='eastsouthDividual', max_length=255, null=True)),
                ('eastsouthteam', models.CharField(blank=True, db_column='eastsouthTeam', max_length=255, null=True)),
                ('eastsouthin', models.CharField(blank=True, db_column='eastSouthIn', max_length=255, null=True)),
                ('forestbar', models.CharField(blank=True, db_column='forestBar', max_length=255, null=True)),
                ('lioncity', models.CharField(blank=True, db_column='lionCity', max_length=255, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('ticketdate', models.CharField(blank=True, db_column='ticketDate', max_length=255, null=True)),
            ],
            options={
                'db_table': 'mobile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recordnums',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenicid', models.IntegerField(blank=True, db_column='scenicId', null=True)),
                ('camid', models.IntegerField(blank=True, db_column='camId', null=True)),
                ('nums', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('hour', models.IntegerField(blank=True, null=True)),
                ('minute', models.IntegerField(blank=True, null=True)),
                ('sec', models.IntegerField(blank=True, null=True)),
                ('createat', models.CharField(blank=True, db_column='createAt', max_length=255, null=True)),
            ],
            options={
                'db_table': 'recordnums',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recordwarnings',
            fields=[
                ('warningid', models.AutoField(db_column='warningId', primary_key=True, serialize=False)),
                ('scenicid', models.CharField(blank=True, db_column='scenicId', max_length=11, null=True)),
                ('camid', models.CharField(blank=True, db_column='camId', max_length=11, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('type', models.IntegerField(blank=True, null=True)),
                ('exceednums', models.IntegerField(blank=True, db_column='exceedNums', null=True)),
                ('createat', models.CharField(blank=True, db_column='createAt', max_length=255, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recordwarnings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scenic',
            fields=[
                ('scenicid', models.CharField(db_column='scenicId', max_length=11, primary_key=True, serialize=False)),
                ('scenicname', models.CharField(blank=True, db_column='scenicName', max_length=255, null=True)),
                ('warning1nums', models.IntegerField(blank=True, db_column='warning1Nums', null=True)),
                ('warning2nums', models.IntegerField(blank=True, db_column='warning2Nums', null=True)),
                ('warning3nums', models.IntegerField(blank=True, db_column='warning3Nums', null=True)),
                ('limitnums', models.IntegerField(blank=True, db_column='limitNums', null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scenic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wifiinfo',
            fields=[
                ('devicetype', models.CharField(blank=True, db_column='deviceType', max_length=255, null=True)),
                ('tvid', models.IntegerField(db_column='tvId', primary_key=True, serialize=False)),
                ('sciencid', models.IntegerField(blank=True, db_column='sciencId', null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('adminid', models.CharField(blank=True, db_column='adminId', max_length=255, null=True)),
                ('adminname', models.CharField(db_column='adminName', max_length=255)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'wifiinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WifiNumsDay',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('island_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('nums', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wifi_nums_day',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WifiNumsMonth',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('island_id', models.IntegerField()),
                ('year', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('nums', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wifi_nums_month',
                'managed': False,
            },
        ),
    ]
